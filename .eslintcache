[{"F:\\vending\\new_vending\\src\\index.js":"1","F:\\vending\\new_vending\\src\\reportWebVitals.js":"2","F:\\vending\\new_vending\\src\\App.js":"3","F:\\vending\\new_vending\\src\\Components\\Form.js":"4","F:\\vending\\new_vending\\src\\Components\\Step2.js":"5","F:\\vending\\new_vending\\src\\Components\\Step1.js":"6","F:\\vending\\new_vending\\src\\Containers\\BannerVideo.js":"7","F:\\vending\\new_vending\\src\\Containers\\SectionTopping.js":"8","F:\\vending\\new_vending\\src\\Containers\\Numpad.js":"9","F:\\vending\\new_vending\\src\\Components\\Step3.js":"10","F:\\vending\\new_vending\\src\\Containers\\BackNavigation.js":"11","F:\\vending\\new_vending\\src\\Containers\\ListProduct.js":"12","F:\\vending\\new_vending\\src\\Containers\\ListProductItem.js":"13","F:\\vending\\new_vending\\src\\Containers\\Payment.js":"14","F:\\vending\\new_vending\\src\\Containers\\ListProductHome.js":"15"},{"size":565,"mtime":1608608066472,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":174,"mtime":1608608066409,"results":"19","hashOfConfig":"17"},{"size":2232,"mtime":1609319032777,"results":"20","hashOfConfig":"17"},{"size":10623,"mtime":1609328299338,"results":"21","hashOfConfig":"17"},{"size":1322,"mtime":1609319388156,"results":"22","hashOfConfig":"17"},{"size":458,"mtime":1608725475460,"results":"23","hashOfConfig":"17"},{"size":6664,"mtime":1609327187287,"results":"24","hashOfConfig":"17"},{"size":2915,"mtime":1609328400057,"results":"25","hashOfConfig":"17"},{"size":855,"mtime":1608608066457,"results":"26","hashOfConfig":"17"},{"size":482,"mtime":1609326343509,"results":"27","hashOfConfig":"17"},{"size":877,"mtime":1609326314603,"results":"28","hashOfConfig":"17"},{"size":1448,"mtime":1609327976224,"results":"29","hashOfConfig":"17"},{"size":934,"mtime":1609326945314,"results":"30","hashOfConfig":"17"},{"size":837,"mtime":1609320924992,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1t43on",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"F:\\vending\\new_vending\\src\\index.js",[],["71","72"],"F:\\vending\\new_vending\\src\\reportWebVitals.js",[],"F:\\vending\\new_vending\\src\\App.js",["73"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Form from './Components/Form'\r\n\r\nfunction App() {\r\n  return (\r\n    <Form></Form>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\vending\\new_vending\\src\\Components\\Form.js",["74"],"import React, { Component } from 'react'\r\nimport StepWizard from 'react-step-wizard';\r\nimport Step1 from './Step1'\r\nimport Step2 from './Step2'\r\nimport Step3 from './Step3'\r\nimport { Container } from \"reactstrap\"\r\nimport axios from 'axios'\r\nexport class Form extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            product : [],\r\n            spiceLevel : [],\r\n            topping : [],\r\n            selectedProductHome : null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // AMBIL ALL DATA PRODUCT\r\n        this.getDataProduct()\r\n        this.getDataAdditional()\r\n    }\r\n\r\n    // AXIOS GET DATA PRODUCT USING HTTP REQUEST METHOD\r\n    getDataProduct(){\r\n        axios.get('http://localhost/api/vending_machine/product.php')\r\n        .then(res => {\r\n            this.setState({\r\n                // ...this.state,\r\n                product :res.data,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // AXIOS GET DATA SPICE LEVEL & TOPPING USING HTTP REQUEST METHOD\r\n    getDataAdditional(){\r\n        axios.get('http://localhost/api/vending_machine/additionalmie.php')\r\n        .then(res => {\r\n            this.setState({\r\n                // ...this.state,\r\n                spiceLevel :res.data.spicelevel,\r\n                topping : res.data.topping\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // CLICK HANDLER\r\n    clickHandlerProductHome = (data) => {\r\n        this.setState({\r\n            ...this.state,\r\n            selectedProductHome : data\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let {product, spiceLevel, topping, selectedProductHome} = this.state\r\n        return (\r\n            <Container fluid={true} className=\"p-0\">\r\n                <StepWizard isLazyMount={true}>\r\n                    <Step1 product={product} clickHandlerProductHome={(data) => this.clickHandlerProductHome(data)}/>\r\n                    <Step2 product={product} spiceLevel={spiceLevel} topping={topping} selectedProductHome={selectedProductHome}/>\r\n                    {/* <Step3 /> */}\r\n                </StepWizard>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Form\r\n","F:\\vending\\new_vending\\src\\Components\\Step2.js",["75","76","77","78","79"],"import React, {Component} from 'react'\r\nimport {Row, Col} from \"reactstrap\";\r\nimport ListProduct from \"../Containers/ListProduct\";\r\nimport ListProductItem from \"../Containers/ListProductItem\"\r\nimport Numpad from '../Containers/Numpad'\r\nimport SectionTopping from '../Containers/SectionTopping'\r\nimport axios from 'axios'\r\nimport BackNavigation from '../Containers/BackNavigation'\r\nimport BannerVideo from '../Containers/BannerVideo'\r\nimport Payment from '../Containers/Payment'\r\n\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleDoubleLeft, faArrowAltCircleLeft} from '@fortawesome/free-solid-svg-icons'\r\nimport './../css/style.css'\r\n\r\nexport class Step2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            productItems : [],\r\n            dataOrder: {},\r\n            number : '',\r\n            boolSelectProductItem : false,\r\n            activeSelectedProductItem : null,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDataProductItem(this.props.selectedProductHome)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.state.dataOrder != prevState.dataOrder){\r\n            console.log(this.state)\r\n        }\r\n    }\r\n\r\n    // AXIOS GET DATA PRODUCT ITEMS USING HTTP REQUEST METHOD\r\n    getDataProductItem(idProduct) {\r\n        console.log(idProduct)\r\n        axios.get('http://localhost/api/vending_machine/productdetail.php', {\r\n            params: {\r\n              idproduct: idProduct\r\n            }\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                productItems :res.data\r\n            }, ()=>{\r\n                console.log(this.state.productItems)\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    //NUMPAD\r\n    clickHandlerNumpad = (num)=>{\r\n        let inputVal = this.state.number\r\n\r\n        if(num === \"delete\"){\r\n            if(inputVal !== \"\"){\r\n                inputVal = inputVal.slice(0, -1)\r\n            }\r\n            \r\n        }else if(num === \"ok\"){\r\n            if(inputVal !== \"\"){\r\n                //jika oke\r\n                console.log(\"oke\")\r\n            }\r\n        }else{\r\n            inputVal += num\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            number : inputVal\r\n        })\r\n    }\r\n\r\n    clickHandlerProduct = (x)=>{\r\n        var target = document.getElementById('menuStep3')\r\n        var prdName = document.getElementById('productName')\r\n\r\n        \r\n        // test.classList.remove(\"style\")\r\n// console.log()\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder :{\r\n                idProductDetail : x.id,\r\n                idProductCategory : x.idCategory,\r\n                price : x.sellingPrice,\r\n                code: x.code\r\n            },\r\n            boolSelectProductItem : true,\r\n            activeSelectedProductItem: x.id\r\n        })\r\n\r\n        if(x.action === \"open\"){\r\n            target.style.width = \"98%\";\r\n            target.style.border = \"3px solid #dfdfdf\";\r\n            prdName.innerHTML = x.bodytext\r\n        }else{\r\n            target.style.width = \"0px\";\r\n            target.style.border = \"0px\";\r\n            prdName.innerHTML = \"\"\r\n        }\r\n\r\n        var menuStep3 = document.getElementsByClassName(\"menuStep3\")\r\n        for(var i=0;i<menuStep3.length;i++){\r\n            if(\"menuStep3_\"+x.idCategory === menuStep3[i].id){\r\n                document.getElementById(menuStep3[i].id).style.display = \"block\"\r\n            }else{\r\n                document.getElementById(menuStep3[i].id).style.display = \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    clickHandlerSubmitOrder = (data) => {\r\n\r\n    }\r\n\r\n    changeHandlerSpiceLevel = (level, price) =>{\r\n        let dataOrder = this.state.dataOrder\r\n        dataOrder['spiceLevel'] = level\r\n        dataOrder['spiceLevelPrice'] = price\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder,\r\n            boolSelectProductItem : false,\r\n        }, () => {\r\n            let spiceLevel = document.getElementsByClassName(\"spicelevel\");\r\n            for(var i=0;i<spiceLevel.length;i++){\r\n                if(i<level){\r\n                    spiceLevel[i].classList.add(\"selected-spice\")\r\n                }else{\r\n                    spiceLevel[i].classList.remove(\"selected-spice\")\r\n                }\r\n            }\r\n            this.calc()\r\n        })\r\n    }\r\n\r\n    changeHandlerTopping = (topping, price, action)=>{\r\n        let dataOrder = this.state.dataOrder\r\n\r\n        if(dataOrder['topping'] == null){\r\n            dataOrder['topping'] = []\r\n            dataOrder['toppingPrice'] = 0\r\n        }\r\n        \r\n        if(action === \"add\"){\r\n            dataOrder['topping'].push(topping)\r\n            dataOrder['toppingPrice'] = Number(dataOrder['toppingPrice']) + Number(price)\r\n        }else{\r\n            if(dataOrder['topping'].length > 1){\r\n                let index = dataOrder['topping'].indexOf(topping);\r\n                if (index > -1) {\r\n                    dataOrder['topping'].splice(index, 1);\r\n                }\r\n                dataOrder['toppingPrice'] = Number(dataOrder['toppingPrice']) - Number(price)\r\n            }else{\r\n                dataOrder['topping'] = null\r\n                dataOrder['toppingPrice'] = 0\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder,\r\n            // boolSelectProductItem : false,\r\n        }, () => {\r\n            this.calc()\r\n        })\r\n    }\r\n\r\n    changeHandlerQty = (data) => {\r\n        let dataOrder = this.state.dataOrder\r\n        dataOrder['qty'] = data\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder,\r\n            boolSelectProductItem : false,\r\n        }, () => {\r\n            let selection = document.getElementsByClassName(\"qty\")\r\n            for(var i=0;i<selection.length;i++){\r\n                if(i+1 === data){\r\n                    selection[i].classList.add(\"selected-qty\")\r\n                }else{\r\n                    selection[i].classList.remove(\"selected-qty\")\r\n                }\r\n            }\r\n            this.calc()\r\n        })\r\n    }\r\n\r\n    calc = () => {\r\n        let dataOrder = this.state.dataOrder\r\n        console.log(dataOrder)\r\n    }\r\n\r\n    payment = ()=>{\r\n        var target = document.getElementById('menuStep4')\r\n        \r\n        target.style.width = \"100%\";\r\n        target.style.border = \"3px solid #dfdfdf\";\r\n    }\r\n\r\n    cancelOrder = ()=>{\r\n        window.location.reload()\r\n    }\r\n\r\n    closeStep3 = ()=>{\r\n        var target1 = document.getElementById('menuStep3')\r\n        target1.style.width = \"0px\";\r\n        target1.style.border = \"0px\";\r\n\r\n        var target2 = document.getElementById('menuStep4')\r\n        \r\n        target2.style.width = \"0px\";\r\n        target2.style.border = \"0px\";\r\n    }\r\n\r\n    render() {\r\n        let {product, spiceLevel, topping, selectedProductHome} = this.props\r\n        let listDataProduct = product.map((v, key) =>\r\n                                <Row className=\"m-2\"key={key}>\r\n                                    <ListProduct click={()=>this.getDataProductItem(v.id)} image={v.image} backgroundColor={v.color} title={v.product} bodytext={v.text} textColor={v.text_color} idCategory={v.id_category}></ListProduct>\r\n                                </Row>\r\n                    )\r\n        \r\n        let listDataProductItems = this.state.productItems.map((v, key) => \r\n            <ListProductItem activeSelectedProductItem={this.state.activeSelectedProductItem} click={(dataPrdItem)=>this.clickHandlerProduct(dataPrdItem)} key={key} grid={'col-md-6 col-lg-6 pt-2 pb-0 pr-2 pl-0'} image={v.image} title={v.name} bodytext={v.text} backgroundColor={v.color} textColor={v.text_color} sellingPrice={v.selling_price} idCategory={v.id_category} id={v.id} code={v.code}></ListProductItem>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <BannerVideo videoUrl=\"indomie_default.mp4\"></BannerVideo>\r\n                <Row className=\"m-auto\">\r\n                    <Col md=\"6\" lg=\"6\" className=\"p-0\">\r\n                        <div id=\"menuStep3\" className=\"m-2 row\" style={{backgroundColor: \"#eeeeee\", color:\"#000\", border: \"0px solid\", height:\"800pxz\"}}>\r\n                            <div style={{width:\"100%\", float:\"left\", padding:\"0px 15px\"}}>\r\n                                <h3 id=\"productName\" className=\"my-5 text-center\">{}</h3>\r\n                                <SectionTopping close={(action)=>this.closeStep3(action)} dataOrder={this.state.dataOrder} changeQty = {(data) => this.changeHandlerQty(data)} changeSpiceLevel = {(level, price) => this.changeHandlerSpiceLevel(level, price)}  click={(data) => this.clickHandlerSubmitOrder(data)} boolSelectProductItem={this.state.boolSelectProductItem} spiceLevel={spiceLevel} topping={topping} changeTopping = {(topping, price, action) => this.changeHandlerTopping(topping, price, action)} clickOrder={()=>this.payment()}/>\r\n                                <Numpad clickOrder={()=>this.payment()} close={(action)=>this.closeStep3(action)} numberValue={this.state.number} click={(num)=>this.clickHandlerNumpad(num)}></Numpad>\r\n                            </div>\r\n                            {/* <div id=\"closeStep3\" style={{width:\"10%\", float:\"left\", height:\"100%\", borderLeft: \"3px solid #dfdfdf\", position:\"relative\"}}\r\n                            onClick={()=>this.clickHandlerProduct({action:\"close\"})}>\r\n                            <FontAwesomeIcon \r\n                                icon={faAngleDoubleLeft} \r\n                                size=\"3x\" \r\n                                style={{color: \"#848484\", cursor: \"pointer\", position: \"absolute\", left: \"0px\", top: \"45%\"}} />\r\n                            </div> */}\r\n                        </div>\r\n                        <div className=\"row m-2\">\r\n                            <BackNavigation click={this.props.previousStep}></BackNavigation>\r\n                        </div>\r\n                        {listDataProduct}\r\n                    </Col>\r\n                    <Col md=\"6\" lg=\"6\" className=\"p-0\">\r\n                        <div id=\"menuStep4\" className=\"m-2 row\" style={{height:\"800px\"}}>\r\n                            <Payment qrVal=\"\" cancelOrder={()=>this.cancelOrder()}/>\r\n                        </div>\r\n                        <Row className=\"mx-auto row\">\r\n                        {listDataProductItems}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Step2\r\n","F:\\vending\\new_vending\\src\\Components\\Step1.js",["80"],"import React, { Component } from 'react'\r\nimport ListProductHome from '../Containers/ListProductHome'\r\n\r\nexport class Step1 extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    clickCard(data){\r\n        var promise = new Promise( (resolve, reject) => {   \r\n            if (data) {\r\n                this.props.clickHandlerProductHome(data)\r\n                resolve('success');\r\n            }\r\n            else {\r\n               reject(Error(\"Promise rejected\"));\r\n            }\r\n        });\r\n\r\n        promise.then( result => {\r\n            this.props.nextStep()\r\n        }, function(error) {\r\n            console.log('a')\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {product, clickHandlerProductHome} = this.props\r\n        let listDataProductHome = product.map((v, key) => \r\n            <ListProductHome click={(data)=>this.clickCard(data)} key={key} grid={'col-md-6 col-lg-6 p-2 d-flex align-items-stretch'} image={v.image} title={v.title} bodytext={v.name} backgroundColor={v.color} textColor={v.text_color} idCategory={v.id_category} id={v.id}></ListProductHome>\r\n        )\r\n        return (\r\n            <div className=\"row p-5 m-auto\">\r\n                {listDataProductHome}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Step1\r\n","F:\\vending\\new_vending\\src\\Containers\\BannerVideo.js",[],"F:\\vending\\new_vending\\src\\Containers\\SectionTopping.js",["81","82","83","84"],"import React, {Component} from 'react'\r\nimport {Row} from \"reactstrap\";\r\nimport './../css/topping.css';\r\nimport './../css/style.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTimesCircle, faCheck, faArrowAltCircleLeft} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SectionTopping = (props) => {\r\n    const qtyPad = []\r\n    let {dataOrder, boolSelectProductItem, changeQty, changeSpiceLevel, changeTopping, spiceLevel, topping} = props\r\n    \r\n    if(boolSelectProductItem){\r\n        reset();\r\n    }\r\n\r\n    for(var i=1;i<=5;i++){\r\n        let qty = i\r\n    \r\n        qtyPad.push(\r\n            <div className=\"qty-pad\" key={i}>\r\n                <div className=\"num d-flex justify-content-center qty align-items-center\" id={\"qty_\"+i} onClick={()=>changeQty(qty)}>\r\n                    <div className=\"txt btn-number\">\r\n                        {i}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let sectionSpiceLevel = spiceLevel.map((v, key) => \r\n        <div className=\"spicelevel\" key={key} id={v.name} onClick={()=>changeSpiceLevel(v.level, v.price)}></div>                \r\n    )\r\n\r\n    const selectTopping = (x)=>{\r\n        let el = document.getElementById(x.material)\r\n        let toppingIcon = el.getElementsByTagName('img')[0]\r\n        let checkIcon = el.getElementsByTagName('svg')[0]\r\n        \r\n        let price= x.price\r\n        let action\r\n\r\n        if(el.classList.contains(\"selected\")){\r\n            toppingIcon.style.opacity = \"0.5\"\r\n            checkIcon.style.display = \"none\"\r\n            el.classList.remove(\"selected\")\r\n            // price = 0\r\n            action = \"remove\"\r\n        }else{\r\n            toppingIcon.style.opacity = \"1\"\r\n            checkIcon.style.display = \"block\"\r\n            el.classList.add(\"selected\")\r\n            // price = x.price\r\n            action = \"add\"\r\n        }\r\n\r\n        changeTopping(x.idTopping, price, action)\r\n    }\r\n\r\n    const sectionTopping = topping.map((v, key) =>\r\n        <div key={key} id={v.material} style={{float:\"left\", position:\"relative\"}} \r\n            onClick={()=>selectTopping({'material':v.material, \"idTopping\":v.id, \"price\":v.price})}>\r\n            <img className=\"float-left mr-2\" src={`${process.env.PUBLIC_URL}/images/icons/${v.icon}`}  alt={v.material} style={{opacity: \"0.5\"}}/>\r\n            <FontAwesomeIcon \r\n                icon={faCheck} \r\n                size=\"3x\" \r\n                style={{color:\"#81ed2f\", cursor:\"pointer\", marginTop:\"30px\", \r\n                    marginLeft:\"15px\", right: \"5px\", bottom: \"0px\", \r\n                    position:\"absolute\", display:\"none\"}}  />\r\n        </div>\r\n    )\r\n\r\n    const priceDetail = ()=>{\r\n        let priceDetail = []\r\n\r\n        priceDetail.push(\r\n            <span style={{fontSize:\"30px\"}} key=\"price\">\r\n                <b>Mie : Rp {dataOrder.price}</b><br/>\r\n            </span>\r\n        )\r\n\r\n        if(\"spiceLevelPrice\" in dataOrder && dataOrder.spiceLevelPrice !== 0){\r\n            priceDetail.push(\r\n                <span style={{fontSize:\"30px\"}} key=\"spice price\">\r\n                    <b>Ext Pedas : Rp {dataOrder.spiceLevelPrice}</b><br/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n        if(\"toppingPrice\" in dataOrder && dataOrder.toppingPrice !== 0){\r\n            priceDetail.push(\r\n                <span style={{fontSize:\"30px\"}} key=\"topping price\">\r\n                    <b>Ext Topping : Rp {dataOrder.toppingPrice}</b><br/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n        priceDetail.push(\r\n            <span style={{fontSize:\"30px\"}} key=\"total price\">\r\n                <b>Total Harga : Rp {(dataOrder.price !== \"\")? dataOrder.price : \"-\"}</b><br/>\r\n            </span>\r\n            \r\n        )\r\n\r\n        return priceDetail\r\n    }\r\n    const extToppingPrice = ()=>{\r\n        if(\"toppingPrice\" in dataOrder && dataOrder.toppingPrice !== 0){\r\n            return <b>Ext Topping : Rp {dataOrder.toppingPrice}</b>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"menuStep3_2\" className=\"menuStep3\" style={{display:\"none\"}}>\r\n            <Row>\r\n                <div className=\"col-md-12\" id=\"section-spice\">\r\n                    <h3><b>Level Pedas</b></h3>\r\n                    <div className=\"bar-wrapper\">\r\n                        {sectionSpiceLevel}\r\n                    </div>\r\n                    <FontAwesomeIcon \r\n                        icon={faTimesCircle} \r\n                        size=\"3x\" \r\n                        style={{color:\"#cc2525\", cursor:\"pointer\", marginTop:\"30px\", marginLeft:\"15px\"}} \r\n                        onClick={()=>changeSpiceLevel(0, 0)} />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3\" id=\"section-qty\">\r\n                    <h3><b>Jumlah</b></h3>\r\n                    {qtyPad}\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-md-12 mt-3\" id=\"section-topping\">\r\n                    <h3><b>Topping</b></h3>\r\n                    {sectionTopping}\r\n                </div>\r\n                <div className=\"col-md-12 mt-3\" id=\"section-price\" style={{borderTop:\"3px solid #dfdfdf\"}}>\r\n                    {priceDetail()}\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-md-6 mt-3 text-center\" >\r\n                    <button className=\"btn btn-primary rounded-circle text-white\" onClick={()=>props.close({action:\"close\"})} style={{width: \"150px\", height: \"150px\", fontSize: \"35px\", fontWeight: \"600\"}}>BACK</button>\r\n                </div>\r\n                <div className=\"col-md-6 mt-3 text-center\">\r\n                    <button className=\"btn btn-success rounded-circle\" onClick={()=>props.clickOrder(\"mie\")} style={{width: \"150px\", height: \"150px\", fontSize: \"35px\", fontWeight: \"600\"}}>ORDER</button>\r\n                </div>    \r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst reset = () => {\r\n    let spiceLevel = document.getElementsByClassName(\"spicelevel\");\r\n    let selectedLevel = document.getElementsByClassName(\"selected-spice\");\r\n    for(var i=0;i<spiceLevel.length;i++){\r\n        if(i<selectedLevel){\r\n            spiceLevel[i].classList.add(\"selected-spice\")\r\n        }else{\r\n            spiceLevel[i].classList.remove(\"selected-spice\")\r\n        }\r\n    }\r\n\r\n    let qty = document.getElementsByClassName(\"qty\")\r\n    let selectedQty = document.getElementsByClassName(\"selected-qty\")\r\n    for(var i=0;i<qty.length;i++){\r\n        if(i+1 === selectedQty){\r\n            qty[i].classList.add(\"selected-qty\")\r\n        }else{\r\n            qty[i].classList.remove(\"selected-qty\")\r\n        }\r\n    }\r\n}\r\n\r\nexport default SectionTopping","F:\\vending\\new_vending\\src\\Containers\\Numpad.js",[],"F:\\vending\\new_vending\\src\\Components\\Step3.js",[],"F:\\vending\\new_vending\\src\\Containers\\BackNavigation.js",[],"F:\\vending\\new_vending\\src\\Containers\\ListProduct.js",["85","86","87","88"],"import React from 'react'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst ListProduct = (props) => {\r\n    let {image, backgroundColor, title, bodytext, click, textColor, idCategory} = props\r\n    return (\r\n        <ListGroup className=\"w-100 rounded-0\" onClick={click} data-category={idCategory}>\r\n            <ListGroupItem style={{ backgroundColor : backgroundColor, borderColor: \"dec5ff\", borderWidth: \"5px\", cursor: 'pointer'}} >\r\n                <img className=\"mx-auto d-block\" src={`${process.env.PUBLIC_URL}/images/product/${image}`}  alt=\"Card image cap\" />\r\n                {/* <div className=\"ml-2\">\r\n                    <h3 style={{color:textColor}}>{title}</h3>\r\n                    <p style={{color:textColor}}>{bodytext}</p>\r\n                </div> */}\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default ListProduct\r\n","F:\\vending\\new_vending\\src\\Containers\\ListProductItem.js",["89","90","91","92"],"import React from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\n\r\nconst ListProductItem = (props) => {\r\n    let {grid, image, title, bodytext, backgroundColor, textColor, sellingPrice, idCategory, id, code, activeSelectedProductItem} = props;\r\n    let dataPrdItem = {\r\n        action: \"open\",\r\n        id, idCategory, sellingPrice, bodytext, code\r\n    }\r\n    let selectedBackground = ''\r\n    if(id === activeSelectedProductItem){\r\n        selectedBackground = \"rgb(0 255 185 / 30%)\"\r\n    }else{\r\n        // \r\n        selectedBackground = \"\"\r\n    }\r\n    return (\r\n        // props.click(\"open\", id, idCategory, sellingPrice\r\n        <div className={grid} onClick={()=>props.click(dataPrdItem)}>\r\n            <Card body inverse style={{ backgroundColor: selectedBackground, borderColor: \"dec5ff\", borderWidth: \"5px\", cursor:'pointer' }} className=\"prd rounded-0 text-dark text-center\" id={`prdDetail_${id}`}>\r\n                <CardImg top width=\"100%\" src={`${process.env.PUBLIC_URL}/images/product/${image}`}  alt=\"Card image cap\" />\r\n                <CardTitle tag=\"h6\" className=\"mt-2\" style={{color:textColor}}>{title}</CardTitle>\r\n                <CardText style={{color:textColor}}>{bodytext}</CardText>\r\n                <CardText style={{color:textColor}}>{`Rp. `+sellingPrice}</CardText>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListProductItem\r\n","F:\\vending\\new_vending\\src\\Containers\\Payment.js",["93"],"import React, { Component } from 'react'\r\nimport {Row} from \"reactstrap\";\r\n\r\n// var React = require('react');\r\nvar QRCode = require('qrcode.react');\r\n\r\n// let qrVal = this.props.propInQuestion ? this.props.qrVal : \"\"\r\n// \"00020101021226670016COM.NOBUBANK.WWW01189360050300000485550214091800000311670303UKE51440014ID.CO.QRIS.WWW0215ID20200814000230303UKE5204549953033605405100005502015802ID5915MYNTS SOLUSINDO6015Bali - Kab. Ban61051295062630114122900000019300515AA00120110679890615AA00120110679890703A016304F6FB\"\r\n\r\nconst Payment = (props)=>{\r\n    return(\r\n        <div>\r\n            <QRCode size={300} level=\"H\" value={props.qrVal} />\r\n            <Row>\r\n                <div className=\"col-md-12 text-center mt-5\">\r\n                    <button className=\"btn btn-danger col-md-12\" onClick={()=>props.cancelOrder()}>Cancel</button>\r\n                </div>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Payment\r\n\r\n","F:\\vending\\new_vending\\src\\Containers\\ListProductHome.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":12},{"ruleId":"98","severity":1,"message":"102","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":13},{"ruleId":"98","severity":1,"message":"103","line":13,"column":9,"nodeType":"100","messageId":"101","endLine":13,"endColumn":24},{"ruleId":"98","severity":1,"message":"104","line":14,"column":9,"nodeType":"100","messageId":"101","endLine":14,"endColumn":26},{"ruleId":"98","severity":1,"message":"105","line":14,"column":28,"nodeType":"100","messageId":"101","endLine":14,"endColumn":48},{"ruleId":"106","severity":1,"message":"107","line":36,"column":33,"nodeType":"108","messageId":"109","endLine":36,"endColumn":35},{"ruleId":"98","severity":1,"message":"110","line":233,"column":44,"nodeType":"100","messageId":"101","endLine":233,"endColumn":63},{"ruleId":"98","severity":1,"message":"111","line":32,"column":25,"nodeType":"100","messageId":"101","endLine":32,"endColumn":48},{"ruleId":"98","severity":1,"message":"112","line":1,"column":16,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"105","line":6,"column":33,"nodeType":"100","messageId":"101","endLine":6,"endColumn":53},{"ruleId":"98","severity":1,"message":"113","line":106,"column":11,"nodeType":"100","messageId":"101","endLine":106,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":165,"column":13,"nodeType":"100","messageId":"116","endLine":165,"endColumn":14},{"ruleId":"98","severity":1,"message":"117","line":5,"column":34,"nodeType":"100","messageId":"101","endLine":5,"endColumn":39},{"ruleId":"98","severity":1,"message":"118","line":5,"column":41,"nodeType":"100","messageId":"101","endLine":5,"endColumn":49},{"ruleId":"98","severity":1,"message":"119","line":5,"column":58,"nodeType":"100","messageId":"101","endLine":5,"endColumn":67},{"ruleId":"120","severity":1,"message":"121","line":9,"column":17,"nodeType":"122","endLine":9,"endColumn":132},{"ruleId":"98","severity":1,"message":"123","line":3,"column":30,"nodeType":"100","messageId":"101","endLine":3,"endColumn":38},{"ruleId":"98","severity":1,"message":"124","line":4,"column":16,"nodeType":"100","messageId":"101","endLine":4,"endColumn":28},{"ruleId":"98","severity":1,"message":"125","line":4,"column":30,"nodeType":"100","messageId":"101","endLine":4,"endColumn":36},{"ruleId":"98","severity":1,"message":"126","line":8,"column":40,"nodeType":"100","messageId":"101","endLine":8,"endColumn":55},{"ruleId":"98","severity":1,"message":"112","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Step3' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faAngleDoubleLeft' is defined but never used.","'faArrowAltCircleLeft' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'selectedProductHome' is assigned a value but never used.","'clickHandlerProductHome' is assigned a value but never used.","'Component' is defined but never used.","'extToppingPrice' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'title' is assigned a value but never used.","'bodytext' is assigned a value but never used.","'textColor' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'CardBody' is defined but never used.","'CardSubtitle' is defined but never used.","'Button' is defined but never used.","'backgroundColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]