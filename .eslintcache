[{"F:\\vending\\new_vending\\src\\index.js":"1","F:\\vending\\new_vending\\src\\reportWebVitals.js":"2","F:\\vending\\new_vending\\src\\App.js":"3","F:\\vending\\new_vending\\src\\Components\\Form.js":"4","F:\\vending\\new_vending\\src\\Components\\Step2.js":"5","F:\\vending\\new_vending\\src\\Components\\Step1.js":"6","F:\\vending\\new_vending\\src\\Containers\\BannerVideo.js":"7","F:\\vending\\new_vending\\src\\Containers\\SectionTopping.js":"8","F:\\vending\\new_vending\\src\\Containers\\Numpad.js":"9","F:\\vending\\new_vending\\src\\Components\\Step3.js":"10","F:\\vending\\new_vending\\src\\Containers\\BackNavigation.js":"11","F:\\vending\\new_vending\\src\\Containers\\ListProduct.js":"12","F:\\vending\\new_vending\\src\\Containers\\ListProductItem.js":"13","F:\\vending\\new_vending\\src\\Containers\\Payment.js":"14","F:\\vending\\new_vending\\src\\Containers\\ListProductHome.js":"15","F:\\vending\\new_vending\\src\\Containers\\Masking.js":"16","F:\\vending\\new_vending\\src\\Containers\\Scroll.js":"17"},{"size":565,"mtime":1608608066472,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":142,"mtime":1610528665624,"results":"21","hashOfConfig":"19"},{"size":2203,"mtime":1610528665634,"results":"22","hashOfConfig":"19"},{"size":24150,"mtime":1610528665764,"results":"23","hashOfConfig":"19"},{"size":1297,"mtime":1610528665654,"results":"24","hashOfConfig":"19"},{"size":457,"mtime":1609925624365,"results":"25","hashOfConfig":"19"},{"size":8515,"mtime":1610528665699,"results":"26","hashOfConfig":"19"},{"size":4084,"mtime":1610528665684,"results":"27","hashOfConfig":"19"},{"size":855,"mtime":1608608066457,"results":"28","hashOfConfig":"19"},{"size":482,"mtime":1609326343509,"results":"29","hashOfConfig":"19"},{"size":1114,"mtime":1610528665669,"results":"30","hashOfConfig":"19"},{"size":1505,"mtime":1610528665674,"results":"31","hashOfConfig":"19"},{"size":1477,"mtime":1610528665684,"results":"32","hashOfConfig":"19"},{"size":837,"mtime":1609320924992,"results":"33","hashOfConfig":"19"},{"size":1202,"mtime":1610528665677,"results":"34","hashOfConfig":"19"},{"size":828,"mtime":1610528665689,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1t43on",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"F:\\vending\\new_vending\\src\\index.js",[],["81","82"],"F:\\vending\\new_vending\\src\\reportWebVitals.js",[],"F:\\vending\\new_vending\\src\\App.js",[],"F:\\vending\\new_vending\\src\\Components\\Form.js",["83"],"import React, { Component } from 'react'\r\nimport StepWizard from 'react-step-wizard';\r\nimport Step1 from './Step1'\r\nimport Step2 from './Step2'\r\nimport Step3 from './Step3'\r\nimport { Container } from \"reactstrap\"\r\nimport axios from 'axios'\r\nexport class Form extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            product : [],\r\n            spiceLevel : [],\r\n            topping : [],\r\n            selectedProductHome : null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // AMBIL ALL DATA PRODUCT\r\n        this.getDataProduct()\r\n        this.getDataAdditional()\r\n    }\r\n\r\n    // AXIOS GET DATA PRODUCT USING HTTP REQUEST METHOD\r\n    getDataProduct(){\r\n        axios.get('http://localhost/api/vending_machine/product.php')\r\n        .then(res => {\r\n            this.setState({\r\n                // ...this.state,\r\n                product :res.data,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // AXIOS GET DATA SPICE LEVEL & TOPPING USING HTTP REQUEST METHOD\r\n    getDataAdditional(){\r\n        axios.get('http://localhost/api/vending_machine/additionalmie.php')\r\n        .then(res => {\r\n            this.setState({\r\n                // ...this.state,\r\n                spiceLevel :res.data.spicelevel,\r\n                topping : res.data.topping\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // CLICK HANDLER\r\n    clickHandlerProductHome = (data) => {\r\n        this.setState({\r\n            ...this.state,\r\n            selectedProductHome : data\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let {product, spiceLevel, topping, selectedProductHome} = this.state\r\n        return (\r\n            <Container fluid={true} className=\"p-0\">\r\n                <StepWizard isLazyMount={true}>\r\n                    <Step1 product={product} clickHandlerProductHome={(data) => this.clickHandlerProductHome(data)}/>\r\n                    <Step2 product={product} spiceLevel={spiceLevel} topping={topping} selectedProductHome={selectedProductHome}/>\r\n                    {/* <Step3 /> */}\r\n                </StepWizard>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Form\r\n","F:\\vending\\new_vending\\src\\Components\\Step2.js",["84","85","86","87"],"import React, {Component} from 'react'\r\nimport {Row, Col} from \"reactstrap\";\r\nimport ListProduct from \"../Containers/ListProduct\";\r\nimport ListProductItem from \"../Containers/ListProductItem\"\r\nimport Numpad from '../Containers/Numpad'\r\nimport SectionTopping from '../Containers/SectionTopping'\r\nimport axios from 'axios'\r\nimport BackNavigation from '../Containers/BackNavigation'\r\nimport BannerVideo from '../Containers/BannerVideo'\r\nimport Payment from '../Containers/Payment'\r\nimport IdleTimer from 'react-idle-timer';\r\nimport Masking from '../Containers/Masking'\r\nimport Scroll from '../Containers/Scroll'\r\nimport './../css/style.css'\r\nimport Recorder from 'recorder-js';\r\n\r\nexport class Step2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            productItems : [],\r\n            dataOrder: {},\r\n            number : '',\r\n            boolSelectProductItem : false,\r\n            activeSelectedProductItem : null,\r\n            activeSelectedProduct : null,\r\n            videoUrl : 'indomie_default.mp4',\r\n            qrVal : '', \r\n            cekPaymentInterval: false,\r\n            // finish: false,\r\n            boolDisableButton: false,\r\n            timeout:1000 * 30 * 1,\r\n            isTimedOut: false,\r\n            secondsQr : 60,\r\n            mask: 0,\r\n            playAudioProcess: false,\r\n            isRecording: false,\r\n            blob : '',\r\n        }\r\n\r\n        this.idleTimer = null\r\n        this.onAction = this._onAction.bind(this)\r\n        this.onActive = this._onActive.bind(this)\r\n        this.onIdle = this._onIdle.bind(this)\r\n\r\n        this.audio = new Audio('audio/proses.mp3')\r\n\r\n        this.audioContext =  new (window.AudioContext || window.webkitAudioContext)();\r\n        this.recorder = new Recorder(this.audioContext, {\r\n            // An array of 255 Numbers\r\n            // You can use this to visualize the audio stream\r\n            // If you use react, check out react-wave-stream\r\n            // onAnalysed: data => console.log(data),\r\n            numChannels:1\r\n        });\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        navigator.mediaDevices.getUserMedia({audio: true})\r\n            .then(stream => this.recorder.init(stream))\r\n            .catch(err => console.log('Uh oh... unable to get stream...', err));\r\n        this.audio.addEventListener('ended', () => this.setState({ playAudioProcess: false }));\r\n        this.getDataProductItem(this.props.selectedProductHome)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.state.dataOrder !== prevState.dataOrder){\r\n            console.log(this.state)\r\n        }\r\n\r\n        if(this.state.cekPaymentInterval !== prevState.cekPaymentInterval){\r\n            if(this.state.cekPaymentInterval){\r\n                this.cekPayment()\r\n            }else{\r\n                clearInterval(this.interval)\r\n            }\r\n        }\r\n\r\n        if(this.state.boolSelectProductItem !== prevState.boolSelectProductItem){\r\n            if(this.state.boolSelectProductItem){\r\n                this.changeGrid(\"open\");\r\n            }else{\r\n                this.changeGrid(\"close\");\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.audio.removeEventListener('ended', () => this.setState({ playAudioProcess: false }));  \r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    bypass = () =>{\r\n        axios.get('http://localhost/api/vending_machine/bypass.php', {\r\n            params: {\r\n                trxNo: this.state.dataOrder.trxNo\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"bypass. . .\")\r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n    }\r\n\r\n    cekPayment = ()=>{\r\n        let dataOrder = this.state.dataOrder\r\n        \r\n        this.interval = setInterval(()=>{ \r\n                axios.get('http://localhost/api/vending_machine/cekpayment.php', {\r\n                    params: {\r\n                        dataOrder\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    if(res.data.pymstt === \"PAID\"){\r\n                        this.setState({\r\n                            ...this.state,\r\n                            cekPaymentInterval : false,\r\n                            mask: 2\r\n                        }, ()=>{\r\n                            this.setState({\r\n                                ...this.state,\r\n                                playAudioProcess: !this.state.playAudioProcess\r\n                            }, ()=>{\r\n                                if(this.state.playAudioProcess){\r\n                                    this.audio.play()\r\n                                    this.audio.addEventListener('ended', () => {\r\n                                        this.startRecordAudio()\r\n                                        setTimeout( () => {\r\n                                            this.stopRecordAudio()\r\n                \r\n                                            this.setState({ ...this.state, playAudioProcess: false })\r\n                                        }, 4000);\r\n                                    });\r\n                                }else{\r\n                                    this.audio.pause()\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                   \r\n                });\r\n                \r\n            },\r\n            \r\n        5000)\r\n    }\r\n\r\n    // AXIOS GET DATA PRODUCT ITEMS USING HTTP REQUEST METHOD\r\n    getDataProductItem(idProduct) {\r\n        axios.get('http://localhost/api/vending_machine/productdetail.php', {\r\n            params: {\r\n              idproduct: idProduct\r\n            }\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                ...this.state,\r\n                productItems :res.data,\r\n                activeSelectedProduct : idProduct\r\n            }, ()=>{\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    getQrCode(){\r\n        this.setState({\r\n            ...this.state,\r\n            boolDisableButton: true\r\n        })\r\n        return axios.get('http://localhost/api/vending_machine/qris.php', {\r\n            params:{\r\n                amount: this.state.dataOrder.amount\r\n            }\r\n        }).then(response => {\r\n            let dataOrder = this.state.dataOrder\r\n            dataOrder['trxNo'] = response.data.data.transactionNo\r\n            dataOrder['reffNo'] = response.data.data.referenceNo\r\n\r\n            this.idleTimer.pause()\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                dataOrder,\r\n                cekPaymentInterval: true,\r\n                qrVal: response.data.data.qrisData\r\n            }, ()=>{\r\n                this.timerQr = setInterval(this.countDown.bind(this), 1000);\r\n            })\r\n        })\r\n    }\r\n\r\n    countDown() {\r\n        let secondsQr = this.state.secondsQr - 1;\r\n        this.setState({\r\n            ...this.state,\r\n            secondsQr\r\n        });\r\n        if (secondsQr === 0) { \r\n            clearInterval(this.timerQr);\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    //NUMPAD\r\n    clickHandlerNumpad = (num)=>{\r\n        let inputVal = this.state.number\r\n\r\n        if(num === \"delete\"){\r\n            if(inputVal !== \"\"){\r\n                inputVal = inputVal.slice(0, -1)\r\n            }\r\n            \r\n        }else if(num === \"ok\"){\r\n            if(inputVal !== \"\"){\r\n            }\r\n        }else{\r\n            inputVal += num\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            number : inputVal\r\n        })\r\n    }\r\n\r\n    clickHandlerProduct = (x)=>{\r\n        var target = document.getElementById('menuStep3')\r\n        var prdName = document.getElementById('productName')\r\n        let videoUrl = 'indomie_default.mp4'\r\n\r\n        if(x.videoUrl){\r\n            videoUrl = x.videoUrl\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder :{\r\n                idProductDetail : x.id,\r\n                idProductCategory : x.idCategory,\r\n                price : x.sellingPrice,\r\n                code: x.code,\r\n                method: x.method\r\n            },\r\n            number : '',\r\n            boolSelectProductItem : true,\r\n            activeSelectedProductItem: x.id,\r\n            videoUrl\r\n        },()=>{\r\n\r\n        })\r\n\r\n        if(x.action === \"open\"){\r\n            target.style.width = \"98%\";\r\n            target.style.border = \"3px solid #dfdfdf\";\r\n            prdName.innerHTML = x.title\r\n        }else{\r\n            target.style.width = \"0px\";\r\n            target.style.border = \"0px\";\r\n            prdName.innerHTML = \"\"\r\n        }\r\n\r\n        var menuStep3 = document.getElementsByClassName(\"menuStep3\")\r\n        for(var i=0;i<menuStep3.length;i++){\r\n            if(\"menuStep3_\"+x.idCategory === menuStep3[i].id){\r\n                document.getElementById(menuStep3[i].id).style.display = \"block\"\r\n            }else{\r\n                document.getElementById(menuStep3[i].id).style.display = \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    changeHandlerSpiceLevel = (level, price) =>{\r\n        let dataOrder = this.state.dataOrder\r\n        dataOrder['spiceLevel'] = level\r\n        dataOrder['spiceLevelPrice'] = price\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder,\r\n            boolSelectProductItem : false,\r\n        }, () => {\r\n            let spiceLevel = document.getElementsByClassName(\"spicelevel\");\r\n            let iconSpice = document.getElementById(\"sectionSpiceLevel\").getElementsByTagName('img')\r\n            for(var i=0;i<spiceLevel.length;i++){\r\n                if(i<level){\r\n                    spiceLevel[i].classList.add(\"selected-spice\")\r\n                    iconSpice[i].src = `${process.env.PUBLIC_URL}/images/icons/chili-colored.png`\r\n                }else{\r\n                    spiceLevel[i].classList.remove(\"selected-spice\")\r\n                    iconSpice[i].src = `${process.env.PUBLIC_URL}/images/icons/chili-empty.png`\r\n                }\r\n            }\r\n\r\n            // if(x === 0){\r\n            //     document.getElementById(\"noChili\").style.opacity = \"1\"\r\n            //     document.getElementById(\"sectionSpiceLevel\").style.opacity = \"0.3\"\r\n            // }else{\r\n            //     document.getElementById(\"noChili\").style.opacity = \"0.3\"\r\n            //     document.getElementById(\"sectionSpiceLevel\").style.opacity = \"1\"\r\n            // }\r\n            \r\n            this.calc()\r\n        })\r\n    }\r\n\r\n    changeHandlerTopping = (topping, price, action)=>{\r\n        let dataOrder = this.state.dataOrder\r\n\r\n        if(dataOrder['topping'] == null){\r\n            dataOrder['topping'] = []\r\n            dataOrder['toppingPrice'] = 0\r\n        }\r\n        \r\n        if(action === \"add\"){\r\n            dataOrder['topping'].push(topping)\r\n            dataOrder['toppingPrice'] = Number(dataOrder['toppingPrice']) + Number(price)\r\n        }else{\r\n            if(dataOrder['topping'].length > 1){\r\n                let index = dataOrder['topping'].indexOf(topping);\r\n                if (index > -1) {\r\n                    dataOrder['topping'].splice(index, 1);\r\n                }\r\n                dataOrder['toppingPrice'] = Number(dataOrder['toppingPrice']) - Number(price)\r\n            }else{\r\n                dataOrder['topping'] = null\r\n                dataOrder['toppingPrice'] = 0\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder,\r\n            // boolSelectProductItem : false,\r\n        }, () => {\r\n            this.calc()\r\n        })\r\n    }\r\n\r\n    changeHandlerQty = (data) => {\r\n        let dataOrder = this.state.dataOrder\r\n        dataOrder['qty'] = data\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder,\r\n            boolSelectProductItem : false,\r\n        }, () => {\r\n            let selection = document.getElementsByClassName(\"qty\")\r\n            for(var i=0;i<selection.length;i++){\r\n                if(i+1 === data){\r\n                    selection[i].classList.add(\"selected-qty\")\r\n                }else{\r\n                    selection[i].classList.remove(\"selected-qty\")\r\n                }\r\n            }\r\n            this.calc()\r\n        })\r\n    }\r\n\r\n    calc = () => {\r\n        let dataOrder = this.state.dataOrder\r\n        let topping = null\r\n        let toppingPrice = 0\r\n        let spiceLevel = 0\r\n        let spiceLevelPrice = 0\r\n        let amount = 0 \r\n        let qty = 0\r\n\r\n        if(dataOrder.qty === undefined){\r\n            qty = 1\r\n        }else{\r\n            qty = dataOrder.qty\r\n        }\r\n\r\n        //topping\r\n        if(dataOrder.topping === undefined){\r\n            topping = null\r\n        }else{\r\n            topping = dataOrder.topping\r\n        }\r\n\r\n        if(dataOrder.toppingPrice === undefined){\r\n            toppingPrice = 0\r\n        }else{\r\n            toppingPrice = dataOrder.toppingPrice\r\n        }\r\n        \r\n        //spice\r\n        if(dataOrder.spiceLevel === undefined){\r\n            spiceLevel = 0\r\n        }else{\r\n            spiceLevel = dataOrder.spiceLevel\r\n        }\r\n\r\n        if(dataOrder.spiceLevelPrice === undefined){\r\n            spiceLevelPrice = 0\r\n        }else{\r\n            spiceLevelPrice = dataOrder.spiceLevelPrice\r\n        }\r\n\r\n        amount = (Number(dataOrder.price) + Number(spiceLevelPrice) + Number(toppingPrice)) * Number(qty)\r\n\r\n        dataOrder[\"amount\"] = amount\r\n        dataOrder[\"qty\"] = qty\r\n        dataOrder[\"spiceLevelPrice\"] = spiceLevelPrice\r\n        dataOrder[\"spiceLevel\"] = spiceLevel\r\n        dataOrder[\"customer_id\"] = this.state.number\r\n\r\n        dataOrder[\"topping\"] = topping\r\n        dataOrder[\"toppingPrice\"] = toppingPrice\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder\r\n        }, ()=>{\r\n            console.log(\"data order\")\r\n            console.log(this.state.dataOrder)\r\n        })\r\n    }\r\n\r\n    payment = (type)=>{\r\n        if(type === 'ppob'){\r\n            if(this.state.number === ''){\r\n                return alert('Anda belum memasukan nomor')\r\n            }\r\n        }\r\n        this.calc()\r\n        Promise.all([this.calc(), this.getQrCode(), this.mask()])\r\n        .then((results) => {\r\n            this.unmask()\r\n            var target = document.getElementById('menuStep4')\r\n            \r\n            target.style.width = \"100%\";\r\n            target.style.border = \"3px solid #dfdfdf\";\r\n        });\r\n    }\r\n\r\n    cancelOrder = ()=>{\r\n        window.location.reload()\r\n    }\r\n\r\n    closeStep3 = ()=>{\r\n        this.setState({\r\n            ...this.state,\r\n            dataOrder: {},\r\n            boolSelectProductItem : false,\r\n            boolDisableButton : false,\r\n            activeSelectedProductItem: null,\r\n        }, ()=>{\r\n            //close topping/numpad\r\n            var target1 = document.getElementById('menuStep3')\r\n            target1.style.width = \"0px\";\r\n            target1.style.border = \"0px\";\r\n\r\n            var target2 = document.getElementById('menuStep4')\r\n            target2.style.width = \"0px\";\r\n            target2.style.border = \"0px\";\r\n\r\n        })\r\n    }\r\n\r\n    _onAction(e) {\r\n        console.log('user did something', e)\r\n        this.setState({isTimedOut: false})\r\n    }\r\n     \r\n    _onActive(e) {\r\n        console.log('user is active', e)\r\n        this.setState({isTimedOut: false})\r\n    }\r\n     \r\n    _onIdle(e) {\r\n        console.log('user is idle', e)\r\n        const isTimedOut = this.state.isTimedOut\r\n        if (isTimedOut) {\r\n            // this.props.history.push('/')\r\n            window.location.reload()\r\n            \r\n        } else {\r\n            // this.setState({showModal: true})\r\n            this.idleTimer.reset();\r\n            this.setState({isTimedOut: true})\r\n        }\r\n    }\r\n\r\n    mask = ()=>{\r\n        this.setState({\r\n            ...this.state,\r\n            mask : 1\r\n        })\r\n    }\r\n\r\n    unmask = ()=>{\r\n        this.setState({\r\n            ...this.state,\r\n            mask : 0\r\n        })\r\n    }\r\n\r\n    startRecordAudio = () => {\r\n        this.recorder.start()\r\n            .then(() => {\r\n                console.log('record')\r\n                this.setState({\r\n                    ...this.state,\r\n                    isRecording : true\r\n                })\r\n            })\r\n    }\r\n\r\n    stopRecordAudio = () => {\r\n        this.recorder.stop()\r\n            .then(({blob, buffer}) => {\r\n                let filename_ = new Date().toISOString();\r\n\t            let filename = filename_.replace(/:/g, \"_\");\r\n                let formData = new FormData()\r\n                formData.append(\"audio_data\", blob, filename);\r\n\r\n                axios.post('http://localhost/api/process/upload.php', formData,{ \r\n                    headers: {'Content-Type': 'multipart/form-data'} }\r\n                ).then(res => {\r\n                    this.setState({ blob, isRecording: false });\r\n                    let audio1 = new Audio('http://localhost/api/process/nama.wav')\r\n                    audio1.play()\r\n                    audio1.addEventListener('ended', () => {\r\n                        audio1.removeEventListener('ended', () => console.log('ended'))\r\n                        window.location.reload()\r\n                    });\r\n                }).catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n                // buffer is an AudioBuffer\r\n            });\r\n        \r\n    }\r\n\r\n    y = 0//untuk titik awal scroll\r\n\r\n    scroll = (direction, target) =>{\r\n        const scrollHeight = 350\r\n        var cont = document.getElementById(target);\r\n        var btnUp = cont.getElementsByClassName(\"btn-scroll-up\")[0];\r\n        var btnDown = cont.getElementsByClassName(\"btn-scroll-down\")[0];\r\n        let opcityBtnUp, opcityBtnDown\r\n\r\n        if(direction === \"up\"){\r\n            this.y = Number(this.y) - scrollHeight;\r\n            \r\n            if(this.y > 0){\r\n                opcityBtnUp = \"1\"\r\n                opcityBtnDown = \"1\"\r\n            }else{\r\n                this.y = 0\r\n                opcityBtnUp = \"0.4\"\r\n                opcityBtnDown = \"1\"\r\n            }\r\n        }else{\r\n            this.y = Number(this.y) + scrollHeight;\r\n\r\n            if(this.y < 350){\r\n                opcityBtnUp = \"1\"\r\n                opcityBtnDown = \"1\"\r\n            }else{\r\n                this.y = 350\r\n                opcityBtnUp = \"1\"\r\n                opcityBtnDown = \"0.4\"\r\n            }\r\n        }\r\n\r\n        btnUp.style.opacity = opcityBtnUp\r\n        btnDown.style.opacity = opcityBtnDown\r\n\r\n        document.getElementById(target).scrollTo(0, this.y);\r\n    }\r\n\r\n    changeGrid = (action) => {\r\n        var target1 = document.getElementById(\"sectionPrd\");\r\n        var target2 = document.getElementById(\"sectionPrdDetail\");\r\n    \r\n        if(action === \"open\"){\r\n            target1.classList.remove(\"col-md-4\", \"col-lg-4\");\r\n            target1.classList.add(\"col-md-6\", \"col-lg-6\");\r\n    \r\n            target2.classList.remove(\"col-md-8\", \"col-lg-8\");\r\n            target2.classList.add(\"col-md-6\", \"col-lg-6\");\r\n        }else{\r\n            target1.classList.add(\"col-md-4\", \"col-lg-4\");\r\n            target1.classList.remove(\"col-md-6\", \"col-lg-6\");\r\n    \r\n            target2.classList.add(\"col-md-8\", \"col-lg-8\");\r\n            target2.classList.remove(\"col-md-6\", \"col-lg-6\");\r\n        }\r\n\r\n        // if(target1.classList.contains(\"col-md-4\")){\r\n        //     target1.classList.remove(\"col-md-4\", \"col-lg-4\");\r\n        //     target1.classList.add(\"col-md-6\", \"col-lg-6\");\r\n    \r\n        //     target2.classList.remove(\"col-md-8\", \"col-lg-8\");\r\n        //     target2.classList.add(\"col-md-6\", \"col-lg-6\");\r\n        // }else{\r\n        //     target1.classList.add(\"col-md-4\", \"col-lg-4\");\r\n        //     target1.classList.remove(\"col-md-6\", \"col-lg-6\");\r\n    \r\n        //     target2.classList.add(\"col-md-8\", \"col-lg-8\");\r\n        //     target2.classList.remove(\"col-md-6\", \"col-lg-6\");\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let {product, spiceLevel, topping} = this.props\r\n        let listDataProduct = product.map((v, key) =>\r\n                                <Row className=\"m-2\"key={key}>\r\n                                    <ListProduct activeSelectedProduct = {this.state.activeSelectedProduct} click={()=>this.getDataProductItem(v.id)} image={v.image} backgroundColor={v.color} title={v.product} bodytext={v.text} textColor={v.text_color} idCategory={v.id_category} id={v.id}></ListProduct>\r\n                                </Row>\r\n                    )\r\n        \r\n        let listDataProductItems = this.state.productItems.map((v, key) => \r\n            <ListProductItem activeSelectedProductItem={this.state.activeSelectedProductItem} click={(dataPrdItem)=>this.clickHandlerProduct(dataPrdItem)} key={key} grid={'col-md-6 col-lg-6 pt-2 pb-0 pr-2 pl-0'} image={v.image} title={v.name} bodytext={v.text} backgroundColor={v.color} textColor={v.text_color} sellingPrice={v.selling_price} idCategory={v.id_category} id={v.id} code={v.code} videoUrl={v.video} method={v.method}></ListProductItem>\r\n        )\r\n        \r\n        return (\r\n            <div>\r\n                <IdleTimer ref={ref => { this.idleTimer = ref }} element={document} onActive={this.onActive} onIdle={this.onIdle} onAction={this.onAction} debounce={250} timeout={this.state.timeout} />\r\n                <BannerVideo videoUrl={this.state.videoUrl}></BannerVideo>\r\n                <Masking mask={this.state.mask} />\r\n                <Row className=\"m-auto\">\r\n                    <Col md=\"4\" lg=\"4\" id=\"sectionPrd\" className=\"p-0\" style={{overflowY: 'auto', height: \"1000px\", transition: \"all 400ms ease\"}}>\r\n                        <div id=\"menuStep3\" className=\"m-2 row\" style={{backgroundColor: \"#eeeeee\", color:\"#000\", border: \"0px solid\", overflowY:\"scroll\"}}>\r\n                            <div style={{width:\"100%\", float:\"left\", padding:\"0px 15px\"}}>\r\n                                <h3 id=\"productName\" className=\"my-5 text-center\">{}</h3>\r\n                                <SectionTopping disableButton={this.state.boolDisableButton} close={(action)=>this.closeStep3(action)} dataOrder={this.state.dataOrder} changeQty = {(data) => this.changeHandlerQty(data)} changeSpiceLevel = {(level, price) => this.changeHandlerSpiceLevel(level, price)} boolSelectProductItem={this.state.boolSelectProductItem} spiceLevel={spiceLevel} topping={topping} changeTopping = {(topping, price, action) => this.changeHandlerTopping(topping, price, action)} clickOrder={(type)=>this.payment(type)}/>\r\n                                <Numpad disableButton={this.state.boolDisableButton} clickOrder={(type)=>this.payment(type)} close={(action)=>this.closeStep3(action)} numberValue={this.state.number} click={(num)=>this.clickHandlerNumpad(num)} dataOrder={this.state.dataOrder}></Numpad>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row m-2\">\r\n                            <BackNavigation click={this.props.previousStep}></BackNavigation>\r\n                        </div>\r\n                        {listDataProduct}\r\n                        <Scroll click={(direction)=>this.scroll(direction, \"sectionPrd\")}/>\r\n                    </Col>\r\n                    <Col md=\"8\" lg=\"8\" id=\"sectionPrdDetail\"  className=\"p-0\" style={{overflowY: 'auto', height: \"1000px\", transition: \"all 400ms ease\"}}>\r\n                        <div id=\"menuStep4\" className=\"m-2 row\" style={{}}>\r\n                            <Payment seconds={this.state.secondsQr} startTimerQr={this.state.startTimerQr} intv={this.state.cekPaymentInterval} qrVal={this.state.qrVal} cancelOrder={()=>this.cancelOrder()} bypass={()=>this.bypass()}/>\r\n                        </div>\r\n                        <Row className=\"mx-auto row\">\r\n                        {listDataProductItems}\r\n                        </Row>\r\n                        <Scroll click={(direction)=>this.scroll(direction, \"sectionPrdDetail\")}/>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Step2","F:\\vending\\new_vending\\src\\Components\\Step1.js",["88"],"import React, { Component } from 'react'\r\nimport ListProductHome from '../Containers/ListProductHome'\r\n\r\nexport class Step1 extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    clickCard(data){\r\n        var promise = new Promise( (resolve, reject) => {   \r\n            if (data) {\r\n                this.props.clickHandlerProductHome(data)\r\n                resolve('success');\r\n            }\r\n            else {\r\n               reject(Error(\"Promise rejected\"));\r\n            }\r\n        });\r\n\r\n        promise.then( result => {\r\n            this.props.nextStep()\r\n        }, function(error) {\r\n            console.log('a')\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {product, clickHandlerProductHome} = this.props\r\n        let listDataProductHome = product.map((v, key) => \r\n            <ListProductHome click={(data)=>this.clickCard(data)} key={key} grid={'col-md-6 col-lg-6 p-2 d-flex align-items-stretch'} image={v.image} title={v.title} bodytext={v.name} backgroundColor={v.color} textColor={v.text_color} idCategory={v.id_category} id={v.id}></ListProductHome>\r\n        )\r\n        return (\r\n            <div className=\"row p-5 m-auto\">\r\n                {listDataProductHome}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Step1\r\n","F:\\vending\\new_vending\\src\\Containers\\BannerVideo.js",[],"F:\\vending\\new_vending\\src\\Containers\\SectionTopping.js",["89","90","91","92"],"import React, {Component} from 'react'\r\nimport {Row} from \"reactstrap\";\r\nimport './../css/topping.css';\r\nimport './../css/style.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCheck} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SectionTopping = (props) => {\r\n    const qtyPad = []\r\n    let {disableButton, dataOrder, boolSelectProductItem, changeQty, changeSpiceLevel, changeTopping, spiceLevel, topping} = props\r\n    \r\n    if(boolSelectProductItem){\r\n        reset();\r\n    }\r\n\r\n    for(var i=1;i<=5;i++){\r\n        let qty = i\r\n    \r\n        qtyPad.push(\r\n            <div className=\"qty-pad\" key={i}>\r\n                <div className={Number(qty) == 1 ? `num d-flex justify-content-center qty align-items-center selected-qty`:`num d-flex justify-content-center qty align-items-center `} id={\"qty_\"+i} onClick={()=>changeQty(qty)}>\r\n                    <div className=\"txt btn-number\">\r\n                        {i}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let sectionSpiceLevel = spiceLevel.map((v, key) => \r\n        <div className=\"spicelevel\" key={key} id={v.name} onClick={()=>changeSpiceLevel(v.level, v.price)} style={{float:\"left\"}}>\r\n            <img src={`${process.env.PUBLIC_URL}/images/icons/chili-empty.png`} alt={\"chili-\"+key} style={{width:\"60px\"}}/>\r\n        </div>                \r\n    )\r\n\r\n    const selectTopping = (x)=>{\r\n        let el = document.getElementById(x.material)\r\n        let toppingIcon = el.getElementsByTagName('img')[0]\r\n        let checkIcon = el.getElementsByTagName('svg')[0]\r\n        \r\n        let price= x.price\r\n        let action\r\n\r\n        if(el.classList.contains(\"selected\")){\r\n            toppingIcon.style.opacity = \"0.5\"\r\n            checkIcon.style.display = \"none\"\r\n            el.classList.remove(\"selected\")\r\n            action = \"remove\"\r\n        }else{\r\n            toppingIcon.style.opacity = \"1\"\r\n            checkIcon.style.display = \"block\"\r\n            el.classList.add(\"selected\")\r\n            action = \"add\"\r\n        }\r\n\r\n        changeTopping(x.idTopping, price, action)\r\n    }\r\n\r\n    const sectionTopping = topping.map((v, key) =>\r\n        <div key={key} id={v.material} style={{float:\"left\", position:\"relative\"}} \r\n            onClick={()=>selectTopping({'material':v.material, \"idTopping\":v.id, \"price\":v.price})}>\r\n            <img className=\"float-left mr-2\" src={`${process.env.PUBLIC_URL}/images/icons/${v.icon}`}  alt={v.material} style={{opacity: \"0.5\"}}/>\r\n            <FontAwesomeIcon \r\n                icon={faCheck} \r\n                size=\"3x\" \r\n                style={{color:\"#81ed2f\", cursor:\"pointer\", marginTop:\"30px\", \r\n                    marginLeft:\"15px\", right: \"5px\", bottom: \"0px\", \r\n                    position:\"absolute\", display:\"none\"}}  />\r\n        </div>\r\n    )\r\n\r\n    const priceDetail = ()=>{\r\n        let priceDetail = []\r\n\r\n        priceDetail.push(\r\n            <tr key=\"productPrice\">\r\n                <td>\r\n                    Mie\r\n                </td>\r\n                <td className=\"text-right\">\r\n                    Rp {Number(dataOrder.price).toLocaleString('id-ID', {maximumFractionDigits:0})}\r\n                </td>\r\n            </tr>\r\n        )\r\n\r\n        if(\"spiceLevelPrice\" in dataOrder && dataOrder.spiceLevelPrice !== 0 && dataOrder.spiceLevelPrice !== \"0\"){\r\n            priceDetail.push(\r\n                <tr key=\"spiceLevelPrice\">\r\n                    <td>\r\n                        Ext Pedas\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                        Rp {Number(dataOrder.spiceLevelPrice).toLocaleString('id-ID', {maximumFractionDigits:0})}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        if(\"toppingPrice\" in dataOrder && dataOrder.toppingPrice !== 0){\r\n            priceDetail.push(\r\n                <tr key=\"toppingPrice\">\r\n                    <td>\r\n                        Ext Topping\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                        Rp {Number(dataOrder.toppingPrice).toLocaleString('id-ID', {maximumFractionDigits:0})}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        priceDetail.push(\r\n            <tr key=\"totalPrice\">\r\n                <th>\r\n                    Total\r\n                </th>\r\n                <th className=\"text-right\">\r\n                    Rp {(dataOrder.amount === undefined )? Number(dataOrder.price).toLocaleString('id-ID', {maximumFractionDigits:0}) : Number(dataOrder.amount).toLocaleString('id-ID', {maximumFractionDigits:0})}\r\n                </th>\r\n            </tr>\r\n        )\r\n\r\n        return priceDetail\r\n    }\r\n\r\n    return(\r\n        <div id=\"menuStep3_2\" className=\"menuStep3\" style={{display:\"none\", fontFamily:\"lato\"}}>\r\n            <Row>\r\n                <div className=\"col-md-12 mt-3 text-center\" id=\"section-qty\">\r\n                    <h3><b>Mau berapa mangkok?</b></h3>\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        {qtyPad}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12 text-center mt-5\" id=\"section-spice\">\r\n                    <h3><b>Pilih level pedas yang kamu mau</b></h3>\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <img id=\"noChili\" src={`${process.env.PUBLIC_URL}/images/icons/no-chili.png`}\r\n                            style={{color:\"#cc2525\", cursor:\"pointer\", width:\"60px\", marginRight:\"25px\", float:\"left\"}} \r\n                            onClick={()=>changeSpiceLevel(0, 0)} alt=\"no-chili\" \r\n                        />\r\n                        <div className=\"\" id=\"sectionSpiceLevel\">\r\n                            {sectionSpiceLevel}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n            <Row className=\"mt-5\">\r\n                <div className=\"col-md-12 text-center\">\r\n                    <h3><b>Mau tambahan topping?</b></h3>\r\n                    <div className=\"d-flex justify-content-center align-items-center\" id=\"section-topping\">\r\n                        {sectionTopping}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12 mt-3\" id=\"section-price\" style={{borderTop:\"3px solid #dfdfdf\"}}>\r\n                    <table className=\"table table-borderless table-sm\" style={{fontSize: \"30px\", fontFamily: \"arial\"}}>\r\n                        <tbody>\r\n                        {priceDetail()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-md-6 mt-3 text-center\" >\r\n                    <button className=\"btn btn-primary rounded-circle text-white\" onClick={()=>props.close({action:\"close\"})} style={{width: \"150px\", height: \"150px\", fontSize: \"35px\", fontWeight: \"600\"}} disabled={disableButton}>BACK</button>\r\n                </div>\r\n                <div className=\"col-md-6 mt-3 text-center\">\r\n                    <button className=\"btn btn-success rounded-circle\" onClick={()=>props.clickOrder(\"mie\")} style={{width: \"150px\", height: \"150px\", fontSize: \"35px\", fontWeight: \"600\"}} disabled={disableButton}>ORDER</button>\r\n                </div>    \r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst reset = () => {\r\n    let spiceLevel = document.getElementsByClassName(\"spicelevel\");\r\n    // document.getElementById(\"noChili\").style.opacity = \"1\"\r\n    // document.getElementById(\"sectionSpiceLevel\").style.opacity = \"0.3\"\r\n    \r\n    for(var i=0;i<spiceLevel.length;i++){\r\n        spiceLevel[i].querySelector(\"img\").src = `${process.env.PUBLIC_URL}/images/icons/chili-empty.png`\r\n        spiceLevel[i].classList.remove(\"selected-spice\")\r\n    }\r\n\r\n    let qty = document.getElementsByClassName(\"qty\")\r\n    for(var i=0;i<qty.length;i++){\r\n        if(i === 0){\r\n            qty[i].classList.add(\"selected-qty\")\r\n        }else{\r\n            qty[i].classList.remove(\"selected-qty\")\r\n        }\r\n    }\r\n\r\n    let toppingItem = document.querySelectorAll(\"#section-topping > div\");\r\n    for(var i = 0; i < toppingItem.length; i++) {\r\n        toppingItem[i].getElementsByTagName('img')[0].style.opacity = \"0.5\"\r\n        toppingItem[i].getElementsByTagName('svg')[0].style.display = \"none\"\r\n        toppingItem[i].classList.remove(\"selected\")\r\n    }\r\n}\r\n\r\nexport default SectionTopping","F:\\vending\\new_vending\\src\\Containers\\Numpad.js",["93"],"import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowCircleDown, faBackspace, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport InputMask from 'react-input-mask';\r\nimport './../css/numpadstyle.css';\r\n\r\nconst Numpad = (props) => {\r\n    let {numberValue, dataOrder} = props\r\n    let getBtn = createBtn(props)\r\n\r\n    return (\r\n        <div className=\"container menuStep3\" id=\"menuStep3_1\" style={{display: \"none\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 text-center\">\r\n                    <h2><b>Masukan nomor anda</b></h2><FontAwesomeIcon icon={faArrowCircleDown} size=\"2x\" className=\"text-primary\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-11\" style={{marginLeft:\"auto\", marginRight:\"auto\"}}>\r\n                    <div className=\"col-md-12\">\r\n                        <InputMask value={numberValue} name=\"name\" id=\"telNumber\" className=\"form-control tel\" mask=\"+6\\2 9999999999999\" maskChar=\" \" />\r\n                        {/* <input type=\"text\" name=\"name\" id=\"telNumber\" className=\"form-control tel\" value={numberValue} readOnly/> */}\r\n                        <div className=\"row justify-content-center align-items-center p-2\">\r\n                        {getBtn}\r\n                        </div>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 mt-3\" id=\"section-price\" style={{borderTop:\"3px solid #dfdfdf\"}}>\r\n                    <table className=\"table table-borderless table-sm\" style={{fontSize: \"30px\", fontFamily: \"arial\"}}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Total :</th>\r\n                                <th className=\"text-right\">Rp {Number(dataOrder.price).toLocaleString('id-ID', {maximumFractionDigits:0})}</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 mt-3 text-center\" >\r\n                    <button className=\"btn btn-primary col-md-12\" onClick={()=>props.close({action:\"close\"})} style={{fontSize: \"35px\", fontWeight: \"600\"}} disabled={props.disableButton}>BACK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst createBtn = (x)=>{\r\n    const btnChar = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"delete\", \"0\", \"ok\"]\r\n\r\n    const btnEl = btnChar.map((num, key)  => {\r\n        if(num === \"delete\"){\r\n            return (\r\n                <div className=\"col-4 mx-auto my-2\" key={key}>\r\n                    <div className=\"num d-flex justify-content-center align-items-center rounded-circle\" onClick={()=>x.click(num)}>\r\n                        <FontAwesomeIcon icon={faBackspace} size=\"3x\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else if(num === \"ok\"){\r\n            return (\r\n                <div className=\"col-4 mx-auto my-2 doneppob\" key={key} onClick={()=>x.clickOrder('ppob')} disabled={x.disableButton}>\r\n                    <div className=\"num d-flex justify-content-center align-items-center rounded-circle bg-success text-white\" onClick={()=>x.click(num)}>\r\n                        <FontAwesomeIcon icon={faCheck} size=\"3x\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"col-4 mx-auto my-2\" key={key}>\r\n                    <div className=\"num d-flex justify-content-center align-items-center rounded-circle\" onClick={()=>x.click(num)}>\r\n                        <div className=\"txt btn-number\">\r\n                            {num}\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n            )\r\n        }\r\n    })\r\n\r\n    return btnEl\r\n}\r\n\r\nexport default Numpad\r\n","F:\\vending\\new_vending\\src\\Components\\Step3.js",[],"F:\\vending\\new_vending\\src\\Containers\\BackNavigation.js",[],"F:\\vending\\new_vending\\src\\Containers\\ListProduct.js",["94","95","96","97","98"],"import React from 'react'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst ListProduct = (props) => {\r\n    let {id, image, backgroundColor, title, bodytext, click, textColor, idCategory, activeSelectedProduct} = props\r\n    let selectedBackground = ''\r\n    if(id === activeSelectedProduct){\r\n        selectedBackground = \"rgb(0 255 185 / 30%)\"\r\n    }else{\r\n        // \r\n        selectedBackground = \"\"\r\n    }\r\n    return (\r\n        <ListGroup className=\"w-100 rounded-0\" onClick={click} data-category={idCategory}>\r\n            <ListGroupItem style={{ backgroundColor : selectedBackground, borderColor: \"dec5ff\", borderWidth: \"5px\", cursor: 'pointer'}} >\r\n                <img className=\"img-fluid mx-auto d-block\" src={`${process.env.PUBLIC_URL}/images/product/${image}`}  alt=\"Card image cap\" />\r\n                {/* <div className=\"ml-2\">\r\n                    <h3 style={{color:textColor}}>{title}</h3>\r\n                    <p style={{color:textColor}}>{bodytext}</p>\r\n                </div> */}\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default ListProduct\r\n","F:\\vending\\new_vending\\src\\Containers\\ListProductItem.js",["99","100","101","102"],"import React from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\n\r\nconst ListProductItem = (props) => {\r\n    let {grid, method, image, title, bodytext, backgroundColor, textColor, sellingPrice, idCategory, id, code, activeSelectedProductItem, videoUrl} = props;\r\n    let dataPrdItem = {\r\n        action: \"open\",\r\n        id, idCategory, sellingPrice, bodytext, code, videoUrl, title, method\r\n    }\r\n    let selectedBackground = ''\r\n    if(id === activeSelectedProductItem){\r\n        selectedBackground = \"rgb(0 255 185 / 30%)\"\r\n    }else{\r\n        // \r\n        selectedBackground = \"\"\r\n    }\r\n    return (\r\n        // props.click(\"open\", id, idCategory, sellingPrice\r\n        <div className={grid} onClick={()=>props.click(dataPrdItem)}>\r\n            <Card body inverse style={{ backgroundColor: selectedBackground, borderColor: \"dec5ff\", borderWidth: \"5px\", cursor:'pointer' }} className=\"prd rounded-0 text-dark text-center\" id={`prdDetail_${id}`}>\r\n                <CardImg top width=\"100%\" src={`${process.env.PUBLIC_URL}/images/product/${image}`}  alt=\"Card image cap\" />\r\n                <CardTitle tag=\"h6\" className=\"mt-2\" style={{color:textColor}}>{title}</CardTitle>\r\n                <CardText style={{color:textColor}}>{bodytext}</CardText>\r\n                <CardText style={{color:textColor}}>{`Rp. `+sellingPrice}</CardText>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListProductItem\r\n","F:\\vending\\new_vending\\src\\Containers\\Payment.js",["103"],"import React, { Component } from 'react'\r\nimport {Row} from \"reactstrap\";\r\n\r\n// var React = require('react');\r\nvar QRCode = require('qrcode.react');\r\n\r\n// let qrVal = this.props.propInQuestion ? this.props.qrVal : \"\"\r\n// \"00020101021226670016COM.NOBUBANK.WWW01189360050300000485550214091800000311670303UKE51440014ID.CO.QRIS.WWW0215ID20200814000230303UKE5204549953033605405100005502015802ID5915MYNTS SOLUSINDO6015Bali - Kab. Ban61051295062630114122900000019300515AA00120110679890615AA00120110679890703A016304F6FB\"\r\n\r\nconst Payment = (props)=>{\r\n\r\n    return(\r\n        <div>\r\n            <h3 className=\"text-dark text-center\">SCAN DISINI</h3>\r\n            <Row>\r\n                <div className=\"col-md-12 text-center my-5\">\r\n                    <button className=\"btn btn-success col-md-12\" onClick={()=>props.bypass()}>Bypass</button>\r\n                </div>\r\n            </Row>\r\n            <QRCode size={330} level=\"Q\" value={props.qrVal} />\r\n            <Row>\r\n                <div className=\"col-md-12 text-center mt-5\">\r\n                    <button className=\"btn btn-danger col-md-12\" onClick={()=>props.cancelOrder()}>Cancel</button>\r\n                </div>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Payment\r\n\r\n","F:\\vending\\new_vending\\src\\Containers\\ListProductHome.js",[],"F:\\vending\\new_vending\\src\\Containers\\Masking.js",["104"],"import React from 'react'\r\n\r\nconst masking = (props)=>{\r\n    let {mask} = props\r\n\r\n    let zIndex = 0\r\n    let opacity = 0\r\n    let background = \"#fff\"\r\n    let content\r\n\r\n    if(mask === 2){\r\n        zIndex = 3\r\n        opacity = 1\r\n        content = (\r\n            <span className=\"d-flex justify-content-center\" \r\n                style={{marginTop: \"30%\", fontSize: \"50px\", fontWeight: \"600\"}}> \r\n                    TERIMA KASIH\r\n            </span>\r\n        )\r\n    }else if(mask === 1){\r\n        zIndex = 3\r\n        opacity = 0.7\r\n        background = \"#b6b6b6\"\r\n        content = (\r\n            <div className=\"d-flex justify-content-center\" \r\n                style={{marginTop: \"30%\"}}\r\n            > \r\n                <img src={`${process.env.PUBLIC_URL}/images/loading1.gif`} alt=\"loading\"/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div id=\"overlay\" className=\"position-absolute\" \r\n            style={{zIndex: zIndex, background: background, opacity: opacity, \r\n                transition: \"visibility 0s, opacity 0.5s linear\", \r\n                width: \"100%\", height: \"100%\"}}\r\n        >\r\n            {content}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default masking\r\n","F:\\vending\\new_vending\\src\\Containers\\Scroll.js",["105"],"import React, { Component } from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faChevronCircleUp, faChevronCircleDown} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Scroll = (props)=>{\r\n    let {click} = props\r\n    return(\r\n        <div style={{display: \"inline\", position: \"sticky\", left: \"100%\", bottom: \"4%\"}}>\r\n            <button className=\"btn btn-scroll-up\" onClick={()=>click(\"up\")} style={{color:\"#1062b5\", opacity:\"0.4\"}}>\r\n                <FontAwesomeIcon icon={faChevronCircleUp} size=\"3x\" />\r\n            </button>\r\n            <br/>\r\n            <button className=\"btn btn-scroll-down\" onClick={()=>click(\"down\")} style={{color:\"#1062b5\"}}>\r\n                <FontAwesomeIcon icon={faChevronCircleDown} size=\"3x\" />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":210,"column":23,"nodeType":"116","messageId":"117","endLine":210,"endColumn":25},{"ruleId":"110","severity":1,"message":"118","line":300,"column":21,"nodeType":"112","messageId":"113","endLine":300,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":525,"column":24,"nodeType":"112","messageId":"121","endLine":525,"endColumn":28},{"ruleId":"110","severity":1,"message":"122","line":623,"column":44,"nodeType":"112","messageId":"113","endLine":623,"endColumn":63},{"ruleId":"110","severity":1,"message":"123","line":32,"column":25,"nodeType":"112","messageId":"113","endLine":32,"endColumn":48},{"ruleId":"110","severity":1,"message":"124","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":21,"column":45,"nodeType":"116","messageId":"117","endLine":21,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":186,"column":13,"nodeType":"112","messageId":"127","endLine":186,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":195,"column":13,"nodeType":"112","messageId":"127","endLine":195,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":21,"column":117,"nodeType":"130","messageId":"131","endLine":21,"endColumn":137},{"ruleId":"110","severity":1,"message":"132","line":5,"column":21,"nodeType":"112","messageId":"113","endLine":5,"endColumn":36},{"ruleId":"110","severity":1,"message":"133","line":5,"column":38,"nodeType":"112","messageId":"113","endLine":5,"endColumn":43},{"ruleId":"110","severity":1,"message":"134","line":5,"column":45,"nodeType":"112","messageId":"113","endLine":5,"endColumn":53},{"ruleId":"110","severity":1,"message":"135","line":5,"column":62,"nodeType":"112","messageId":"113","endLine":5,"endColumn":71},{"ruleId":"136","severity":1,"message":"137","line":16,"column":17,"nodeType":"138","endLine":16,"endColumn":142},{"ruleId":"110","severity":1,"message":"139","line":3,"column":30,"nodeType":"112","messageId":"113","endLine":3,"endColumn":38},{"ruleId":"110","severity":1,"message":"140","line":4,"column":16,"nodeType":"112","messageId":"113","endLine":4,"endColumn":28},{"ruleId":"110","severity":1,"message":"141","line":4,"column":30,"nodeType":"112","messageId":"113","endLine":4,"endColumn":36},{"ruleId":"110","severity":1,"message":"132","line":8,"column":48,"nodeType":"112","messageId":"113","endLine":8,"endColumn":63},{"ruleId":"110","severity":1,"message":"124","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"124","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"124","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Step3' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'x' is assigned a value but never used.","no-self-assign","'blob' is assigned to itself.","selfAssignment","'selectedProductHome' is assigned a value but never used.","'clickHandlerProductHome' is assigned a value but never used.","'Component' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","no-octal-escape","Don't use octal: '\\2'. Use '\\u....' instead.","Literal","octalEscapeSequence","'backgroundColor' is assigned a value but never used.","'title' is assigned a value but never used.","'bodytext' is assigned a value but never used.","'textColor' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'CardBody' is defined but never used.","'CardSubtitle' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]